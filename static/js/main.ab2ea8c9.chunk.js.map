{"version":3,"sources":["components/DragResize/index.js","components/CloseButton/index.js","components/Timer/index.js","components/Display/index.js","components/Webcam/index.js","components/App/index.js","serviceWorker.js","index.js"],"names":["onResizeStopHandler","window","dispatchEvent","Event","DragResize","props","react_default","a","createElement","Fragment","lib","default","x","y","width","initialWidth","height","initialHeight","lockAspectRatio","bounds","onResizeStop","children","CloseButton","Timer","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","intervalsElapsed","isPaused","hidden","dispatch","bind","assertThisInitialized","tick","startTimer","pauseTimer","action","newState","timerReducer","setState","type","_this2","clearInterval","timer","setInterval","objectSpread","_this3","_this$state","className","components_CloseButton","href","onClick","hide","FitText_default","minFontSize","parent","parentNode","compressor","sec","secDisplay","concat","Math","floor","slice","formattedSeconds","resetTimer","React","PureComponent","Webcam","ReactDOM","findDOMNode","refs","webcam","srcObject","ref","autoPlay","_React$PureComponent","streams","devices","inherits","createClass","key","value","startDevices","startWebcams","error","errors","push","deviceId","constraints","video","exact","navigator","mediaDevices","getUserMedia","then","startVideoCb","catch","setNewError","stream","videoInputExists","forEach","device","kind","startVideo","message","enumerateDevices","setDevices","style","marginLeft","map","name","components_DragResize","innerWidth","components_Timer","index","innerHeight","Display","App","components_Webcam","Component","Boolean","location","hostname","match","render","components_App","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"oUAKA,SAASA,IACPC,OAAOC,cAAc,IAAIC,MAAM,WAGjC,IA8BeC,EA9BI,SAACC,GAAD,OACjBC,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACEC,QAAS,CACPC,EAAGP,EAAMO,EACTC,EAAGR,EAAMQ,EACTC,MAAOT,EAAMU,aACbC,OAAQX,EAAMY,eAEhBC,gBAAiBb,EAAMa,gBACvBC,OAAQ,SACRC,aAAcpB,GAEbK,EAAMgB,2CCfEC,SAJK,SAACjB,GAAD,OAChBC,EAAAC,EAAAC,cAAA,IAAOH,EAAP,UCmIWkB,qBAtHb,SAAAA,EAAYlB,GAAO,IAAAmB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACjBC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAMtB,KACD0B,MAAQ,CACXC,iBAAkB,EAClBC,UAAU,EACVC,QAAQ,GAEVV,EAAKW,SAAWX,EAAKW,SAASC,KAAdX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KAChBA,EAAKc,KAAOd,EAAKc,KAAKF,KAAVX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KACZA,EAAKe,WAAaf,EAAKe,WAAWH,KAAhBX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KAClBA,EAAKgB,WAAahB,EAAKgB,WAAWJ,KAAhBX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KAVDA,wEAgBViB,GACP,IAAMC,EAAWf,KAAKgB,aAAahB,KAAKI,MAAOU,GAC/Cd,KAAKiB,SAASF,kCAId,MAAO,CACLG,KAAM,6CAIG,IAAAC,EAAAnB,KAKX,OAJAoB,cAAcpB,KAAKqB,OACnBrB,KAAKqB,MAAQC,YAAY,kBAAMH,EAAKX,SAASW,EAAKR,SAAS,KAC3DX,KAAKQ,SAASR,KAAKW,QAEZ,CACLO,KAAM,8CAMR,OADAE,cAAcpB,KAAKqB,OACZ,CACLH,KAAM,8CAKR,MAAO,CACLA,KAAM,wCAMR,MAAO,CACLA,KAAM,6CAIGd,EAAOU,GAClB,OAAQA,EAAOI,MACb,IAAK,QACH,OAAOpB,OAAAyB,EAAA,EAAAzB,CAAA,GAAKM,EAAZ,CAAmBC,iBAAkB,IAEvC,IAAK,QACH,OAAOP,OAAAyB,EAAA,EAAAzB,CAAA,GAAKM,EAAZ,CAAmBE,UAAU,IAE/B,IAAK,QACH,OAAOR,OAAAyB,EAAA,EAAAzB,CAAA,GAAKM,EAAZ,CAAmBE,UAAU,IAE/B,IAAK,OACH,OAAOR,OAAAyB,EAAA,EAAAzB,CAAA,GAAKM,EAAZ,CAAmBG,QAAQ,IAE7B,IAAK,OACH,OAAOT,OAAAyB,EAAA,EAAAzB,CAAA,GAAKM,EAAZ,CAAmBC,iBAAkBD,EAAMC,iBAAmB,IAEhE,QACE,OAAOD,oCAKJ,IAAAoB,EAAAxB,KAAAyB,EACwCzB,KAAKI,MAA5CC,EADDoB,EACCpB,iBAAkBC,EADnBmB,EACmBnB,SAE1B,OAHOmB,EAC6BlB,OAG3B,KAIP5B,EAAAC,EAAAC,cAAA,OAAK6C,UAAU,WACf/C,EAAAC,EAAAC,cAAC8C,EAAD,CAAaC,KAAK,IAAIC,QAAS,kBAAML,EAAKhB,SAASgB,EAAKM,UAAxD,QACEnD,EAAAC,EAAAC,cAAA,OAAK6C,UAAU,eACb/C,EAAAC,EAAAC,cAACkD,EAAAnD,EAAD,CAASoD,YAAa,GAAIC,OAAQjC,KAAKkC,WAAYC,WAAY,IAtGhD,SAACC,GACxB,IAAMC,EAAU,IAAAC,OAAQF,EAAM,IAC9B,SAAAE,OAAUC,KAAKC,MAAMJ,EAAM,IAA3B,KAAAE,OAAkCD,EAAWI,OAAO,IAqGzCC,CAAiBrC,KAGC,IAArBA,GAA0BC,EACxB3B,EAAAC,EAAAC,cAAA,UAAQgD,QAAS,kBAAML,EAAKhB,SAASgB,EAAKmB,gBAA1C,SACA,KAGFrC,GAAiC,IAArBD,EACV1B,EAAAC,EAAAC,cAAA,UAAQgD,QAAS,kBAAML,EAAKhB,SAASgB,EAAKZ,gBAA1C,SACA,GAGDN,GAAiC,IAArBD,EAEX,GADA1B,EAAAC,EAAAC,cAAA,UAAQgD,QAAS,kBAAML,EAAKhB,SAASgB,EAAKX,gBAA1C,gBA9GQ+B,IAAMC,gBCgBXC,qMAnBKC,IAASC,YAAYhD,KAAKiD,KAAKC,QACvCC,UAAYnD,KAAKtB,MAAMyE,2CAI/B,OACExE,EAAAC,EAAAC,cAAA,OAAK6C,UAAU,kBACb/C,EAAAC,EAAAC,cAAC8C,EAAD,MACAhD,EAAAC,EAAAC,cAAA,SAAOuE,IAAI,SAAS1B,UAAW1B,KAAKtB,MAAMgD,UAAW2B,UAAQ,YAXhDT,IAAMC,gBC0GZC,EA3Gf,SAAAQ,GAEE,SAAAR,EAAYpE,GAAO,IAAAmB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA8C,IACjBjD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAgD,GAAA3C,KAAAH,KAAMtB,KACD0B,MAAQ,CACXmD,QAAS,GACTC,QAAS,IAJM3D,EAFrB,OAAAC,OAAA2D,EAAA,EAAA3D,CAAAgD,EAAAQ,GAAAxD,OAAA4D,EAAA,EAAA5D,CAAAgD,EAAA,EAAAa,IAAA,oBAAAC,MAAA,WAWI5D,KAAK6D,iBAXT,CAAAF,IAAA,aAAAC,MAAA,SAcaJ,GACTxD,KAAKiB,SAAS,CAAEuC,YAChBxD,KAAK8D,iBAhBT,CAAAH,IAAA,cAAAC,MAAA,SAmBcG,GACV,IAAMC,EAAShE,KAAKI,MAAM4D,OAAShE,KAAKI,MAAM4D,OAAOvB,QAAU,GAC/DuB,EAAOC,KAAKF,GACZ/D,KAAKiB,SAAS,CACZ+C,aAvBN,CAAAL,IAAA,aAAAC,MAAA,SA2BaM,GACT,IAAMC,EAAc,CAClBC,MAAO,CAAEjF,MAAO,KAAME,OAAQ,KAC9B6E,SAAU,CAAEG,MAAOH,IAGrBI,UAAUC,aAAaC,aAAa,CAAEJ,MAAOD,IAC1CM,KAAKzE,KAAK0E,aAAajE,KAAKT,OAC5B2E,MAAM3E,KAAK4E,YAAYnE,KAAKT,SAnCnC,CAAA2D,IAAA,eAAAC,MAAA,SAsCeiB,GACX,IAAMtB,EAAUvD,KAAKI,MAAMmD,QAAQd,QACnCc,EAAQU,KAAKY,GACb7E,KAAKiB,SAAS,CAAEsC,cAzCpB,CAAAI,IAAA,eAAAC,MAAA,WA4CiB,IAAAzC,EAAAnB,KACT8E,GAAmB,EACvB9E,KAAKI,MAAMoD,QAAQuB,QAAQ,SAACC,GACN,eAAhBA,EAAOC,OACT9D,EAAK+D,WAAWF,EAAOd,UACvBY,GAAmB,KAIlBA,GACH9E,KAAK4E,YAAY,CAAEO,QAAS,qDAtDlC,CAAAxB,IAAA,eAAAC,MAAA,WA2DSU,WAAcA,UAAUC,aAI7BD,UAAUC,aAAaa,mBACpBX,KAAKzE,KAAKqF,WAAW5E,KAAKT,OAC1B2E,MAAM3E,KAAK4E,YAAYnE,KAAKT,OAL7BA,KAAK4E,YAAY,CAAEO,QAAS,gGA5DlC,CAAAxB,IAAA,SAAAC,MAAA,WAqEI,OAAK5D,KAAKI,MAGNJ,KAAKI,MAAM4D,OAEXrF,EAAAC,EAAAC,cAAA,OAAKyG,MAAO,CAAEC,WAAY,KACxB5G,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,MAAI6C,UAAU,UACX1B,KAAKI,MAAM4D,OAAOwB,IAAI,SAACzB,EAAOJ,GAAR,OACrBhF,EAAAC,EAAAC,cAAA,MAAI8E,IAAKA,GACPhF,EAAAC,EAAAC,cAAA,SAAIkF,EAAM0B,MACV9G,EAAAC,EAAAC,cAAA,SAAIkF,EAAMoB,cAUpBxG,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAAC6G,EAAD,CAAYtG,aAAc,IAAKE,cAAe,IAAKL,EAAGX,OAAOqH,WAAa,IAAKzG,EAAG,IAChFP,EAAAC,EAAAC,cAAC+G,EAAD,OAGD5F,KAAKI,MAAMmD,QAAQiC,IAAI,SAACX,EAAQgB,GAAT,OACtBlH,EAAAC,EAAAC,cAAC6G,EAAD,CAAY/B,IAAKkC,EAAOzG,aAAc,IAAKE,cAAe,IAAKL,EAAKX,OAAOqH,WAAa,EAAME,EAAQ,GAAI3G,EAAIZ,OAAOwH,YAAc,EAAK,KACtInH,EAAAC,EAAAC,cAACkH,EAAD,CAAS5C,UAAW0B,QA3BnB,SAtEb/B,EAAA,CAA4BF,IAAMC,eCSnBmD,0LARX,OACErH,EAAAC,EAAAC,cAAA,OAAK6C,UAAU,OACb/C,EAAAC,EAAAC,cAACoH,EAAD,cAJUC,cCOEC,QACW,cAA7B7H,OAAO8H,SAASC,UAEe,UAA7B/H,OAAO8H,SAASC,UAEhB/H,OAAO8H,SAASC,SAASC,MACvB,2DCZNvD,IAASwD,OAAO5H,EAAAC,EAAAC,cAAC2H,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBpC,WACrBA,UAAUqC,cAAcC,MAAMnC,KAAK,SAAAoC,GACjCA,EAAaC","file":"static/js/main.ab2ea8c9.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {Rnd}  from 'react-rnd';\n\nfunction onResizeStopHandler() {\n  window.dispatchEvent(new Event('resize'));\n}\n\nconst DragResize = (props) => (\n  <React.Fragment>\n    <Rnd \n      default={{\n        x: props.x,\n        y: props.y,\n        width: props.initialWidth,\n        height: props.initialHeight,\n      }}\n      lockAspectRatio={props.lockAspectRatio}\n      bounds={'parent'}\n      onResizeStop={onResizeStopHandler}\n    >\n      {props.children}\n    </Rnd >\n  </React.Fragment>\n);\n\nDragResize.propTypes = {\n  x: PropTypes.number.isRequired,\n  y: PropTypes.number.isRequired,\n  initialHeight: PropTypes.number.isRequired,\n  initialWidth: PropTypes.number.isRequired,\n  isResizable: PropTypes.bool,\n  lockAspectRatio: PropTypes.bool,\n  className: PropTypes.string,\n  children: PropTypes.object,\n};\n\n\nexport default DragResize;","import React from 'react';\nimport './style.css';\n\nconst CloseButton = (props) => (\n    <a {...props}>Ã—</a>\n);\n\nexport default CloseButton;","import React from 'react';\nimport FitText from '@kennethormandy/react-fittext'\n\nimport CloseButton from '../CloseButton';\nimport './style.css';\n\nconst formattedSeconds = (sec) => {\n  const secDisplay = `0${(sec % 60)}`;\n  return `${Math.floor(sec / 60)}:${secDisplay.slice(-2)}`;\n};\n\n\n\nclass Timer extends React.PureComponent {\n\n  timer;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      intervalsElapsed: 0,\n      isPaused: true,\n      hidden: false\n    }\n    this.dispatch = this.dispatch.bind(this);\n    this.tick = this.tick.bind(this);\n    this.startTimer = this.startTimer.bind(this);\n    this.pauseTimer = this.pauseTimer.bind(this);\n  }\n\n  /**\n   *  Mini Redux ftw \n   **/\n  dispatch(action) {\n    const newState = this.timerReducer(this.state, action);\n    this.setState(newState);\n  }\n\n  hide() {\n    return {\n      type: 'HIDE',\n    }; \n  }\n\n  startTimer() {\n    clearInterval(this.timer);\n    this.timer = setInterval(() => this.dispatch(this.tick()), 1000);\n    this.dispatch(this.tick());\n\n    return {\n      type: 'START',\n    };\n  }\n\n  pauseTimer() {\n    clearInterval(this.timer);\n    return {\n      type: 'PAUSE',\n    };\n  }\n\n  resetTimer() {\n    return {\n      type: 'RESET',\n    };\n  }\n\n\n  tick() {\n    return {\n      type: 'TICK',\n    };\n  }\n\n  timerReducer(state, action) {\n    switch (action.type) {\n      case 'RESET': {\n        return { ...state, intervalsElapsed: 0 };\n      }\n      case 'START': {\n        return { ...state, isPaused: false };\n      }\n      case 'PAUSE': {\n        return { ...state, isPaused: true };\n      }\n      case 'HIDE': {\n        return { ...state, hidden: true };\n      }\n      case 'TICK': {\n        return { ...state, intervalsElapsed: state.intervalsElapsed + 1 };\n      }\n      default: {\n        return state;\n      }\n    }\n  }\n\n  render() {\n    const { intervalsElapsed, isPaused, hidden } = this.state;\n\n    if (hidden) {\n      return null;\n    }\n\n    return (\n      <div className=\"wrapper\">\n      <CloseButton href=\"#\" onClick={() => this.dispatch(this.hide())}>Ã—</CloseButton>\n        <div className=\"timedisplay\">\n          <FitText minFontSize={24} parent={this.parentNode} compressor={0.3}>\n            {formattedSeconds(intervalsElapsed)}\n          </FitText>\n        </div>\n        {(intervalsElapsed !== 0 && isPaused\n          ? <button onClick={() => this.dispatch(this.resetTimer())}>Reset</button>\n          : null\n        )}\n\n        {(isPaused || intervalsElapsed === 0\n          ? <button onClick={() => this.dispatch(this.startTimer())}>Start</button>\n          : ''\n        )}\n\n        {(!isPaused && intervalsElapsed !== 0\n          ? <button onClick={() => this.dispatch(this.pauseTimer())}>Stop</button>\n          : ''\n        )}\n        \n      </div>\n    );\n  }\n}\n\n\n\n\nexport default Timer;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport CloseButton from '../CloseButton';\n\nimport './style.css';\n\nclass Webcam extends React.PureComponent { \n\n  componentDidMount() {\n    const element = ReactDOM.findDOMNode(this.refs.webcam);\n    element.srcObject = this.props.srcObject;\n  }\n\n  render() {\n    return (\n      <div className=\"resize-wrapper\">\n        <CloseButton />\n        <video ref=\"webcam\" className={this.props.className} autoPlay />\n      </div>\n    );\n  }\n}\n\nWebcam.propTypes = {\n  srcObject: PropTypes.object.isRequired,\n  className: PropTypes.string,\n};\n\nexport default Webcam;","import React from 'react';\nimport DragResize from '../DragResize';\nimport Timer from '../Timer';\n\nimport Display from '../Display';\n\nexport class Webcam extends React.PureComponent {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      streams: [],\n      devices: [],\n    };\n  }\n\n  componentDidMount() {\n    this.startDevices();\n  }\n\n  setDevices(devices) {\n    this.setState({ devices });\n    this.startWebcams();\n  }\n\n  setNewError(error) {\n    const errors = this.state.errors ? this.state.errors.slice() : [];\n    errors.push(error);\n    this.setState({\n      errors,\n    });\n  }\n\n  startVideo(deviceId) {\n    const constraints = {\n      video: { width: 1280, height: 720 },\n      deviceId: { exact: deviceId },\n    };\n\n    navigator.mediaDevices.getUserMedia({ video: constraints })\n      .then(this.startVideoCb.bind(this))\n      .catch(this.setNewError.bind(this));\n  }\n\n  startVideoCb(stream) {\n    const streams = this.state.streams.slice();\n    streams.push(stream);\n    this.setState({ streams });\n  }\n\n  startWebcams() {\n    let videoInputExists = false;\n    this.state.devices.forEach((device) => {\n      if (device.kind === 'videoinput') {\n        this.startVideo(device.deviceId);\n        videoInputExists = true;\n      }\n    });\n\n    if (!videoInputExists) {\n      this.setNewError({ message: 'No video input found, please connect a webcam.' });\n    }\n  }\n\n  startDevices() {\n    if (!navigator || !navigator.mediaDevices) {\n      this.setNewError({ message: 'Sorry, navigator or navigator.mediaDevices does not seem to be available in this browser!' });\n      return;\n    }\n    navigator.mediaDevices.enumerateDevices()\n      .then(this.setDevices.bind(this))\n      .catch(this.setNewError.bind(this));\n  }\n\n  render() {\n    if (!this.state) {\n      return null;\n    }\n    if (this.state.errors) {\n      return (\n        <div style={{ marginLeft: 20 }}>\n          <h3>Error</h3>\n          <ul className=\"errors\">\n            {this.state.errors.map((error, key) => (\n              <li key={key}>\n                <p>{error.name}</p>\n                <p>{error.message}</p>\n              </li>\n              )\n            )}\n          </ul>\n        </div>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <DragResize initialWidth={100} initialHeight={100} x={window.innerWidth - 150} y={50}>\n          <Timer />\n        </DragResize> \n\n        {this.state.streams.map((stream, index) => (\n          <DragResize key={index} initialWidth={400} initialHeight={300} x={((window.innerWidth / 2)) * index + 50} y={(window.innerHeight / 2) - 150}>\n            <Display srcObject={stream} />\n          </DragResize>\n          )\n        )}\n        </React.Fragment>\n    );\n  }\n}\n\n\nexport default Webcam;","import React, { Component } from 'react';\n\nimport Webcam from '../Webcam';\nimport './style.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <Webcam/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}