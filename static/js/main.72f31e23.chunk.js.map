{"version":3,"sources":["components/DragResize/index.js","components/CloseButton/index.js","components/Timer/index.js","components/Display/index.js","components/Webcam/index.js","components/App/index.js","serviceWorker.js","index.js"],"names":["onResizeStopHandler","window","dispatchEvent","Event","DragResize","props","react_default","a","createElement","Fragment","lib","default","x","y","width","initialWidth","height","initialHeight","lockAspectRatio","bounds","onResizeStop","children","CloseButton","Timer","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","intervalsElapsed","isPaused","hidden","dispatch","bind","assertThisInitialized","tick","startTimer","pauseTimer","action","newState","timerReducer","setState","type","_this2","clearInterval","timer","setInterval","objectSpread","_this3","_this$state","className","components_CloseButton","onClick","hide","FitText_default","minFontSize","parent","parentNode","compressor","sec","secDisplay","concat","Math","floor","slice","formattedSeconds","resetTimer","React","PureComponent","Webcam","ReactDOM","findDOMNode","refs","webcam","srcObject","ref","autoPlay","_React$PureComponent","streams","devices","inherits","createClass","key","value","startDevices","startWebcams","error","errors","push","deviceId","constraints","video","exact","navigator","mediaDevices","getUserMedia","then","startVideoCb","catch","setNewError","stream","videoInputExists","forEach","device","kind","startVideo","message","enumerateDevices","setDevices","style","marginLeft","map","name","components_DragResize","innerWidth","components_Timer","index","innerHeight","Display","App","components_Webcam","Component","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","render","components_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.72f31e23.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {Rnd}  from 'react-rnd';\n\nfunction onResizeStopHandler() {\n  window.dispatchEvent(new Event('resize'));\n}\n\nconst DragResize = (props) => (\n  <React.Fragment>\n    <Rnd \n      default={{\n        x: props.x,\n        y: props.y,\n        width: props.initialWidth,\n        height: props.initialHeight,\n      }}\n      lockAspectRatio={props.lockAspectRatio}\n      bounds={'parent'}\n      onResizeStop={onResizeStopHandler}\n    >\n      {props.children}\n    </Rnd >\n  </React.Fragment>\n);\n\nDragResize.propTypes = {\n  x: PropTypes.number.isRequired,\n  y: PropTypes.number.isRequired,\n  initialHeight: PropTypes.number.isRequired,\n  initialWidth: PropTypes.number.isRequired,\n  isResizable: PropTypes.bool,\n  lockAspectRatio: PropTypes.bool,\n  className: PropTypes.string,\n  children: PropTypes.object,\n};\n\n\nexport default DragResize;","import React from 'react';\nimport './style.css';\n\nconst CloseButton = (props) => (\n    <a {...props}>Ã—</a>\n);\n\nexport default CloseButton;","import React from 'react';\nimport FitText from '@kennethormandy/react-fittext'\n\nimport CloseButton from '../CloseButton';\nimport './style.css';\n\nconst formattedSeconds = (sec) => {\n  const secDisplay = `0${(sec % 60)}`;\n  return `${Math.floor(sec / 60)}:${secDisplay.slice(-2)}`;\n};\n\n\n\nclass Timer extends React.PureComponent {\n\n  timer;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      intervalsElapsed: 0,\n      isPaused: true,\n      hidden: false\n    }\n    this.dispatch = this.dispatch.bind(this);\n    this.tick = this.tick.bind(this);\n    this.startTimer = this.startTimer.bind(this);\n    this.pauseTimer = this.pauseTimer.bind(this);\n  }\n\n  /**\n   *  Mini Redux ftw \n   **/\n  dispatch(action) {\n    const newState = this.timerReducer(this.state, action);\n    this.setState(newState);\n  }\n\n  hide() {\n    return {\n      type: 'HIDE',\n    }; \n  }\n\n  startTimer() {\n    clearInterval(this.timer);\n    this.timer = setInterval(() => this.dispatch(this.tick()), 1000);\n    this.dispatch(this.tick());\n\n    return {\n      type: 'START',\n    };\n  }\n\n  pauseTimer() {\n    clearInterval(this.timer);\n    return {\n      type: 'PAUSE',\n    };\n  }\n\n  resetTimer() {\n    return {\n      type: 'RESET',\n    };\n  }\n\n\n  tick() {\n    return {\n      type: 'TICK',\n    };\n  }\n\n  timerReducer(state, action) {\n    switch (action.type) {\n      case 'RESET': {\n        return { ...state, intervalsElapsed: 0 };\n      }\n      case 'START': {\n        return { ...state, isPaused: false };\n      }\n      case 'PAUSE': {\n        return { ...state, isPaused: true };\n      }\n      case 'HIDE': {\n        return { ...state, hidden: true };\n      }\n      case 'TICK': {\n        return { ...state, intervalsElapsed: state.intervalsElapsed + 1 };\n      }\n      default: {\n        return state;\n      }\n    }\n  }\n\n  render() {\n    const { intervalsElapsed, isPaused, hidden } = this.state;\n\n    if (hidden) {\n      return null;\n    }\n\n    return (\n      <div className=\"wrapper\">\n      <CloseButton className=\"display-close\" onClick={() => this.dispatch(this.hide())}>Ã—</CloseButton>\n        <div className=\"timedisplay\">\n          <FitText minFontSize={24} parent={this.parentNode} compressor={0.3}>\n            {formattedSeconds(intervalsElapsed)}\n          </FitText>\n        </div>\n        {(intervalsElapsed !== 0 && isPaused\n          ? <button onClick={() => this.dispatch(this.resetTimer())}>Reset</button>\n          : null\n        )}\n\n        {(isPaused || intervalsElapsed === 0\n          ? <button onClick={() => this.dispatch(this.startTimer())}>Start</button>\n          : ''\n        )}\n\n        {(!isPaused && intervalsElapsed !== 0\n          ? <button onClick={() => this.dispatch(this.pauseTimer())}>Stop</button>\n          : ''\n        )}\n        \n      </div>\n    );\n  }\n}\n\n\n\n\nexport default Timer;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport CloseButton from '../CloseButton';\n\nimport './style.css';\n\nclass Webcam extends React.PureComponent {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      hidden: false\n    }\n    this.hide = this.hide.bind(this);\n  }\n\n  componentDidMount() {\n    const element = ReactDOM.findDOMNode(this.refs.webcam);\n    element.srcObject = this.props.srcObject;\n  }\n\n  hide() {\n    this.setState({ hidden: true });\n  }\n\n  render() {\n    if (this.state.hidden) {\n      return null;\n    }\n    return (\n      <div className=\"resize-wrapper\">\n        <CloseButton onClick={this.hide} className=\"display-close\" />\n        <video ref=\"webcam\" className={this.props.className} autoPlay />\n      </div>\n    );\n  }\n}\n\nWebcam.propTypes = {\n  srcObject: PropTypes.object.isRequired,\n  className: PropTypes.string,\n};\n\nexport default Webcam;","import React from 'react';\nimport DragResize from '../DragResize';\nimport Timer from '../Timer';\n\nimport Display from '../Display';\n\nexport class Webcam extends React.PureComponent {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      streams: [],\n      devices: [],\n    };\n  }\n\n  componentDidMount() {\n    this.startDevices();\n  }\n\n  setDevices(devices) {\n    this.setState({ devices });\n    this.startWebcams();\n  }\n\n  setNewError(error) {\n    const errors = this.state.errors ? this.state.errors.slice() : [];\n    errors.push(error);\n    this.setState({\n      errors,\n    });\n  }\n\n  startVideo(deviceId) {\n    const constraints = {\n      video: { width: 1280, height: 720 },\n      deviceId: { exact: deviceId },\n    };\n\n    navigator.mediaDevices.getUserMedia({ video: constraints })\n      .then(this.startVideoCb.bind(this))\n      .catch(this.setNewError.bind(this));\n  }\n\n  startVideoCb(stream) {\n    const streams = this.state.streams.slice();\n    streams.push(stream);\n    this.setState({ streams });\n  }\n\n  startWebcams() {\n    let videoInputExists = false;\n    this.state.devices.forEach((device) => {\n      if (device.kind === 'videoinput') {\n        this.startVideo(device.deviceId);\n        videoInputExists = true;\n      }\n    });\n\n    if (!videoInputExists) {\n      this.setNewError({ message: 'No video input found, please connect a webcam.' });\n    }\n  }\n\n  startDevices() {\n    if (!navigator || !navigator.mediaDevices) {\n      this.setNewError({ message: 'Sorry, navigator or navigator.mediaDevices does not seem to be available in this browser!' });\n      return;\n    }\n    navigator.mediaDevices.enumerateDevices()\n      .then(this.setDevices.bind(this))\n      .catch(this.setNewError.bind(this));\n  }\n\n  render() {\n    if (!this.state) {\n      return null;\n    }\n    if (this.state.errors) {\n      return (\n        <div style={{ marginLeft: 20 }}>\n          <h3>Error</h3>\n          <ul className=\"errors\">\n            {this.state.errors.map((error, key) => (\n              <li key={key}>\n                <p>{error.name}</p>\n                <p>{error.message}</p>\n              </li>\n              )\n            )}\n          </ul>\n        </div>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <DragResize initialWidth={100} initialHeight={100} x={window.innerWidth - 150} y={50}>\n          <Timer />\n        </DragResize> \n\n        {this.state.streams.map((stream, index) => (\n          <DragResize key={index} initialWidth={400} initialHeight={300} x={((window.innerWidth / 2)) * index + 50} y={(window.innerHeight / 2) - 150}>\n            <Display srcObject={stream} />\n          </DragResize>\n          )\n        )}\n        </React.Fragment>\n    );\n  }\n}\n\n\nexport default Webcam;","import React, { Component } from 'react';\n\nimport Webcam from '../Webcam';\nimport './style.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <Webcam/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.1/8 is considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n  \r\n  export function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not localhost. Just register service worker\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the updated precached content has been fetched,\r\n                // but the previous service worker will still serve the older\r\n                // content until all client tabs are closed.\r\n                console.log(\r\n                  'New content is available and will be used when all ' +\r\n                    'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n                );\r\n  \r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n  \r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n      .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n          (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          'No internet connection found. App is running in offline mode.'\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready.then(registration => {\r\n        registration.unregister();\r\n      });\r\n    }\r\n  }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.register();\n"],"sourceRoot":""}